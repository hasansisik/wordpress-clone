import { createReducer } from "@reduxjs/toolkit";
import { getOther, updateOther } from "../actions/otherActions";

interface OtherState {
  other: any;
  loading: boolean;
  error: string | null;
  success?: boolean;
  message?: string;
}

const initialState: OtherState = {
  other: {
    activeOther: "blog1",
    blog1: {
      badge: "From Blog",
      title: "Our Latest Articles",
      subtitle: "Explore the insights and trends shaping our industry",
      seeAllLink: "#"
    },
    blog2: {
      badge: "From Blog",
      title: "Our Latest News and Articles",
      subtitle: "Explore the insights and trends shaping our industry. ğŸ”¥",
      seeAllLink: "#",
      bgLine: "/assets/imgs/blog-2/img-bg-line.png"
    },
    blog3: {
      title: "Related Posts",
      bgLine: "/assets/imgs/team-1/bg-line.png"
    },
    blog5: {
      title: "Trending News",
      subtitle: "Explore the insights and trends shaping our industry"
    },
    contact1: {
      badge: "Ä°letiÅŸime GeÃ§in",
      title: "Ekibimiz Ä°le Ä°letiÅŸime GeÃ§in",
      description: "YardÄ±ma hazÄ±r uzmanlarÄ±mÄ±zla kapsamlÄ± bir hizmet ajansÄ±yÄ±z. <br />24 saat iÃ§inde sizinle iletiÅŸime geÃ§eceÄŸiz.",
      formTitle: "Mesaj BÄ±rakÄ±n",
      chatTitle: "Bizimle sohbet edin",
      chatDescription: "Destek ekibimiz 7/24 hizmetinizdedir",
      whatsappLink: "#",
      viberLink: "#",
      messengerLink: "#",
      emailTitle: "Bize e-posta gÃ¶nderin",
      emailDescription: "Ekibimiz sorularÄ±nÄ±za hÄ±zlÄ± bir ÅŸekilde yanÄ±t verecektir",
      supportEmail: "destek@infinia.com",
      salesEmail: "satis@infinia.com",
      inquiryTitle: "Daha fazla bilgi iÃ§in",
      inquiryDescription: "AnÄ±nda yardÄ±m iÃ§in bize ulaÅŸÄ±n",
      phoneNumber: "+01 (24) 568 900",
      services: [
        "AraÅŸtÄ±rma planlamasÄ±",
        "Finans DanÄ±ÅŸmanlÄ±ÄŸÄ±",
        "Ä°ÅŸ promosyonu",
        "Ä°ÅŸ DanÄ±ÅŸmanlÄ±ÄŸÄ±",
        "Finans DanÄ±ÅŸmanlÄ±ÄŸÄ±",
        "Ä°ÅŸ promosyonu"
      ]
    }
  },
  loading: false,
  error: null,
};

export const otherReducer = createReducer(initialState, (builder) => {
  builder
    // Get Other
    .addCase(getOther.pending, (state) => {
      state.loading = true;
      state.error = null;
    })
    .addCase(getOther.fulfilled, (state, action) => {
      state.loading = false;
      state.other = action.payload;
      state.error = null;
    })
    .addCase(getOther.rejected, (state, action) => {
      state.loading = false;
      state.error = action.payload as string;
    })
    
    // Update Other
    .addCase(updateOther.pending, (state) => {
      state.loading = true;
      state.error = null;
    })
    .addCase(updateOther.fulfilled, (state, action) => {
      state.loading = false;
      state.other = action.payload;
      state.success = true;
      state.message = "DiÄŸer bileÅŸenler baÅŸarÄ±yla gÃ¼ncellendi";
      state.error = null;
    })
    .addCase(updateOther.rejected, (state, action) => {
      state.loading = false;
      state.error = action.payload as string;
      state.success = false;
    });
});

export default otherReducer; 